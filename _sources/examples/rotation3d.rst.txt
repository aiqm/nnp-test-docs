.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_examples_rotation3d.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_rotation3d.py:


Rotation in 3D Space
====================

This tutorial demonstrates how rotate a group of points in 3D space.

To begin with, we must understand that rotation is a linear transformation.
The set of all rotations forms the group SO(3). It is a Lie group that each
group element is described by an orthogonal 3x3 matrix.

That is, if you have two points :math:`\vec{r}_1` and :math:`\vec{r}_2`, and
you want to rotate the two points along the same axis for the same number of
degrees, then there is a single orthogonal matrix :math:`R` that no matter
the value of :math:`\vec{r}_1` and :math:`\vec{r}_2`, their rotation is always
:math:`R\cdot\vec{r}_1` and :math:`R\cdot\vec{r}_2`.

Let's import libraries first


.. code-block:: default

    import math
    import torch
    import nnp.so3 as so3








Let's first take a look at a special case: rotating ``(1, 0, 0)``, ``(0, 1, 0)``
and ``(0, 0, 1)`` along the diagonal for 120 degree, this should permute these
points:


.. code-block:: default

    axis = torch.ones(3) / math.sqrt(3) * (math.pi * 2 / 3)
    R = so3.rotate_along(axis)
    points = torch.tensor([
        [1, 0, 0],
        [0, 1, 0],
        [0, 0, 1],
    ], dtype=torch.float)
    rotated = R @ points
    print(R)

    print(R.t() @ R)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    tensor([[[ 0.,  0.,  0.],
             [ 0.,  0.,  1.],
             [ 0., -1.,  0.]],

            [[ 0.,  0., -1.],
             [ 0.,  0.,  0.],
             [ 1.,  0.,  0.]],

            [[ 0.,  1.,  0.],
             [-1.,  0.,  0.],
             [ 0.,  0.,  0.]]])
    tensor([[ 0.0000, -1.2092,  1.2092],
            [ 1.2092,  0.0000, -1.2092],
            [-1.2092,  1.2092,  0.0000]])
    tensor([[ 5.8024, -3.2327,  4.1224],
            [-3.2327,  3.0005, -3.5744],
            [ 4.1224, -3.5744,  3.0219]])
    tensor([[ 61.1121, -43.1918,  47.9317],
            [-43.1918,  32.2293, -34.8524],
            [ 47.9317, -34.8524,  38.9017]])





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.195 seconds)


.. _sphx_glr_download_examples_rotation3d.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: rotation3d.py <rotation3d.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: rotation3d.ipynb <rotation3d.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
